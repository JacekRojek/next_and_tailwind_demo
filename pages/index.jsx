import { debounce } from "lodash";
import Head from "next/head";
import { useState, useCallback } from "react";
import EmptyListPlaceholder from "../components/emtyListPlaceholder";
import SearchResult from "../components/searchResult";
import { API } from "../config";

const searchEndpoint = (query) => `${API}/people/?search=${query}`;

const fetchData = async (query, cb) => {
  const res = await fetch(searchEndpoint(query));
  cb(res);
};

const debouncedFetchData = debounce((query, cb) => {
  fetchData(query, cb);
}, 500);


export default function Home() {
  const [query, setQuery] = useState("");
  const [results, setResults] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const onChange = useCallback((event) => {
    const { value } = event.target;
    setQuery(value)
    setIsLoading(true)
    debouncedFetchData(value, async (res) => {
      const json = await res.json();
      const {results} = json
      setResults(results || []);
      setIsLoading(false)
    })
  }, []);
  return (
    <div className="bg-background-dark flex h-screen">
      <Head>
        <title>Star Wars Search Engine</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col flex-1 ">
        <div className="container mx-auto px-5 m-5">
          <h1 className="text-primary text-6xl text-center">Star Wars</h1>
          <h3 className="text-primary text-4xl text-center m-5">Search Engine</h3>
          <input
            onChange={onChange}
            type="text"
            id="search"
            name="search"
            className="
              form-control
              block
              mx-auto
              w-full
              md:max-w-5xl
              px-3
              py-3
              text-base
              font-normal
              text-background-dark
              bg-white bg-clip-padding
              border border-solid border-primary
              rounded
              transition
              ease-in-out
              m-4
              focus:text-gray-700 focus:bg-white focus:border-background-light focus:outline-none
            "
          />
        </div>
        <div className="bg-background-light flex flex-1 flex-col">
          {results.length > 0 && query.length > 0 ? results.map((person) => (
            <SearchResult key={person.name} person={person} />
          )) : <EmptyListPlaceholder query={query} isLoading={isLoading}/> }
        </div>
      </main>
    </div>
  );
}
